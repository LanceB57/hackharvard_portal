rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if isSignedIn() && hasRole('admin');
    }
    match /meta/hhids {
    	allow read, create, update: if isSignedIn();
    }
    match /users/{userId} {
    	allow read, create, update: if isSignedIn() && hasUserId(userId);
    }
    match /mail/{mailId} {
    	allow create: if isSignedIn();
    }
    match /applications/{userId} {
    	allow read: if isSignedIn() && hasRole('applicant') && hasUserId(userId);
    	allow create, update: if isSignedIn() && hasRole('applicant') && hasVerifiedEmail() && hasUserId(userId) && !applicationSubmitted(userId);
      allow read, write: if isSignedIn() && hasRole('admin');
    }
    function isSignedIn() {
    	return request.auth != null;
    }
    function hasVerifiedEmail() {
    	return request.auth.token.email_verified;
    }
    function hasUserId(userId) {
    	return request.auth.uid == userId;
    }
    function applicationSubmitted(userId) {
    	return exists(/databases/$(database)/documents/applications/$(userId)) && get(/databases/$(database)/documents/applications/$(userId)).data.meta.submitted == true;
    }
    function hasRole(role) {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
  }
}